// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                BigInt    @id @default(autoincrement())
  name              String
  email             String    @unique
  email_verified_at DateTime?
  password          String
  remember_token    String?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @default(now())

  notes       Note[]
  comments    Comment[]
  sharedNotes NoteShare[] @relation("UserSharedNotes")
}

model notes {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  title      String   @db.VarChar(255)
  content    String
  is_public  Boolean
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  user     User        @relation(fields: [user_id], references: [id])
  comments Comment[]
  shares   NoteShare[]
}

model comments {
  id         BigInt   @id @default(autoincrement())
  note_id    BigInt
  user_id    BigInt
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  note Note @relation(fields: [note_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
}

model note_shares {
  id           BigInt   @id @default(autoincrement())
  note_id      BigInt
  shared_to_id BigInt
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())

  note      Note @relation(fields: [note_id], references: [id])
  shared_to User @relation("UserSharedNotes", fields: [shared_to_id], references: [id])

  @@unique([note_id, shared_to_id])
}
